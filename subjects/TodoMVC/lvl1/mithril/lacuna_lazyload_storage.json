{
    "node_modules/todomvc-common/base.js[197:548]": "\n\t\t\tif (!object) {\n\t\t\t\treturn object;\n\t\t\t}\n\t\t\tfor (var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++) {\n\t\t\t\tvar iterable = arguments[argsIndex];\n\t\t\t\tif (iterable) {\n\t\t\t\t\tfor (var key in iterable) {\n\t\t\t\t\t\tif (object[key] == null) {\n\t\t\t\t\t\t\tobject[key] = iterable[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t",
    "node_modules/todomvc-common/base.js[1588:3332]": "\n\t\t\tvar render;\n\t\t\tsettings = _.defaults({}, settings, _.templateSettings);\n\n\t\t\t// Combine delimiters into one regular expression via alternation.\n\t\t\tvar matcher = new RegExp([\n\t\t\t\t(settings.escape || noMatch).source,\n\t\t\t\t(settings.interpolate || noMatch).source,\n\t\t\t\t(settings.evaluate || noMatch).source\n\t\t\t].join('|') + '|$', 'g');\n\n\t\t\t// Compile the template source, escaping string literals appropriately.\n\t\t\tvar index = 0;\n\t\t\tvar source = \"__p+='\";\n\t\t\ttext.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t\t\t\tsource += text.slice(index, offset)\n\t\t\t\t\t.replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n\t\t\t\tif (escape) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (interpolate) {\n\t\t\t\t\tsource += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t\t\t\t}\n\t\t\t\tif (evaluate) {\n\t\t\t\t\tsource += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t\t\t\t}\n\t\t\t\tindex = offset + match.length;\n\t\t\t\treturn match;\n\t\t\t});\n\t\t\tsource += \"';\\n\";\n\n\t\t\t// If a variable is not specified, place data values in local scope.\n\t\t\tif (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n\t\t\tsource = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t\t\t\t\"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t\t\t\tsource + \"return __p;\\n\";\n\n\t\t\ttry {\n\t\t\t\trender = new Function(settings.variable || 'obj', '_', source);\n\t\t\t} catch (e) {\n\t\t\t\te.source = source;\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (data) return render(data, _);\n\t\t\tvar template = function(data) {\n\t\t\t\treturn render.call(this, data, _);\n\t\t\t};\n\n\t\t\t// Provide the compiled function source as a convenience for precompilation.\n\t\t\ttemplate.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n\t\t\treturn template;\n\t\t",
    "node_modules/todomvc-common/base.js[3427:3646]": "i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\t\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n\t\t",
    "node_modules/todomvc-common/base.js[4521:5446]": "\n\t\tif (!(this instanceof Learn)) {\n\t\t\treturn new Learn(learnJSON, config);\n\t\t}\n\n\t\tvar template, framework;\n\n\t\tif (typeof learnJSON !== 'object') {\n\t\t\ttry {\n\t\t\t\tlearnJSON = JSON.parse(learnJSON);\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (config) {\n\t\t\ttemplate = config.template;\n\t\t\tframework = config.framework;\n\t\t}\n\n\t\tif (!template && learnJSON.templates) {\n\t\t\ttemplate = learnJSON.templates.todomvc;\n\t\t}\n\n\t\tif (!framework && document.querySelector('[data-framework]')) {\n\t\t\tframework = document.querySelector('[data-framework]').dataset.framework;\n\t\t}\n\n\t\tthis.template = template;\n\n\t\tif (learnJSON.backend) {\n\t\t\tthis.frameworkJSON = learnJSON.backend;\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append({\n\t\t\t\tbackend: true\n\t\t\t});\n\t\t} else if (learnJSON[framework]) {\n\t\t\tthis.frameworkJSON = learnJSON[framework];\n\t\t\tthis.frameworkJSON.issueLabel = framework;\n\t\t\tthis.append();\n\t\t}\n\n\t\tthis.fetchIssueCount();\n\t",
    "node_modules/todomvc-common/base.js[5490:6529]": "\n\t\tvar aside = document.createElement('aside');\n\t\taside.innerHTML = _.template(this.template, this.frameworkJSON);\n\t\taside.className = 'learn';\n\n\t\tif (opts && opts.backend) {\n\t\t\t// Remove demo link\n\t\t\tvar sourceLinks = aside.querySelector('.source-links');\n\t\t\tvar heading = sourceLinks.firstElementChild;\n\t\t\tvar sourceLink = sourceLinks.lastElementChild;\n\t\t\t// Correct link path\n\t\t\tvar href = sourceLink.getAttribute('href');\n\t\t\tsourceLink.setAttribute('href', href.substr(href.lastIndexOf('http')));\n\t\t\tsourceLinks.innerHTML = heading.outerHTML + sourceLink.outerHTML;\n\t\t} else {\n\t\t\t// Localize demo links\n\t\t\tvar demoLinks = aside.querySelectorAll('.demo-link');\n\t\t\tArray.prototype.forEach.call(demoLinks, function (demoLink) {\n\t\t\t\tif (demoLink.getAttribute('href').substr(0, 4) !== 'http') {\n\t\t\t\t\tdemoLink.setAttribute('href', findRoot() + demoLink.getAttribute('href'));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tdocument.body.className = (document.body.className + ' learn-bar').trim();\n\t\tdocument.body.insertAdjacentHTML('afterBegin', aside.outerHTML);\n\t",
    "node_modules/todomvc-common/base.js[6579:7199]": "\n\t\tvar issueLink = document.getElementById('issue-count-link');\n\t\tif (issueLink) {\n\t\t\tvar url = issueLink.href.replace('https://github.com', 'https://api.github.com/repos');\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.onload = function (e) {\n\t\t\t\tvar parsedResponse = JSON.parse(e.target.responseText);\n\t\t\t\tif (parsedResponse instanceof Array) {\n\t\t\t\t\tvar count = parsedResponse.length;\n\t\t\t\t\tif (count !== 0) {\n\t\t\t\t\t\tissueLink.innerHTML = 'This app has ' + count + ' open issues';\n\t\t\t\t\t\tdocument.getElementById('issue-count').style.display = 'inline';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send();\n\t\t}\n\t",
    "node_modules/mithril/mithril.js[411:413]": "",
    "node_modules/mithril/mithril.js[17952:18001]": "return a.action - b.action || a.index - b.index",
    "node_modules/mithril/mithril.js[20926:21510]": "\n\t\tif (cached.configContext && typeof cached.configContext.onunload === FUNCTION) {\n\t\t\tcached.configContext.onunload();\n\t\t\tcached.configContext.onunload = null\n\t\t}\n\t\tif (cached.controllers) {\n\t\t\tfor (var i = 0, controller; controller = cached.controllers[i]; i++) {\n\t\t\t\tif (typeof controller.onunload === FUNCTION) controller.onunload({preventDefault: noop});\n\t\t\t}\n\t\t}\n\t\tif (cached.children) {\n\t\t\tif (type.call(cached.children) === ARRAY) {\n\t\t\t\tfor (var i = 0, child; child = cached.children[i]; i++) unload(child)\n\t\t\t}\n\t\t\telse if (cached.children.tag) unload(cached.children)\n\t\t}\n\t",
    "node_modules/mithril/mithril.js[21560:22209]": "\n\t\tvar nextSibling = parentElement.childNodes[index];\n\t\tif (nextSibling) {\n\t\t\tvar isElement = nextSibling.nodeType != 1;\n\t\t\tvar placeholder = $document.createElement(\"span\");\n\t\t\tif (isElement) {\n\t\t\t\tparentElement.insertBefore(placeholder, nextSibling || null);\n\t\t\t\tplaceholder.insertAdjacentHTML(\"beforebegin\", data);\n\t\t\t\tparentElement.removeChild(placeholder)\n\t\t\t}\n\t\t\telse nextSibling.insertAdjacentHTML(\"beforebegin\", data)\n\t\t}\n\t\telse parentElement.insertAdjacentHTML(\"beforeend\", data);\n\t\tvar nodes = [];\n\t\twhile (parentElement.childNodes[index] !== nextSibling) {\n\t\t\tnodes.push(parentElement.childNodes[index]);\n\t\t\tindex++\n\t\t}\n\t\treturn nodes\n\t",
    "node_modules/mithril/mithril.js[22272:22436]": "\n\t\t\te = e || event;\n\t\t\tm.redraw.strategy(\"diff\");\n\t\t\tm.startComputation();\n\t\t\ttry {return callback.call(object, e)}\n\t\t\tfinally {\n\t\t\t\tendFirstComputation()\n\t\t\t}\n\t\t",
    "node_modules/mithril/mithril.js[22504:22794]": "\n\t\t\tif (html === undefined) html = $document.createElement(\"html\");\n\t\t\tif ($document.documentElement && $document.documentElement !== node) {\n\t\t\t\t$document.replaceChild(node, $document.documentElement)\n\t\t\t}\n\t\t\telse $document.appendChild(node);\n\t\t\tthis.childNodes = $document.childNodes\n\t\t",
    "node_modules/mithril/mithril.js[22827:22858]": "\n\t\t\tthis.appendChild(node)\n\t\t",
    "node_modules/mithril/mithril.js[23822:23895]": "\n\t\tvalue = new String(value);\n\t\tvalue.$trusted = true;\n\t\treturn value\n\t",
    "node_modules/mithril/mithril.js[24052:24073]": "\n\t\t\treturn store\n\t\t",
    "node_modules/mithril/mithril.js[24719:25190]": "\n\t\tvar controller = function() {\n\t\t\treturn (component.controller || noop).apply(this, args) || this\n\t\t}\n\t\tvar view = function(ctrl) {\n\t\t\tif (arguments.length > 1) args = args.concat([].slice.call(arguments, 1))\n\t\t\treturn component.view.apply(component, args ? [ctrl].concat(args) : [ctrl])\n\t\t}\n\t\tview.$original = component.view\n\t\tvar output = {controller: controller, view: view}\n\t\tif (args[0] && args[0].key != null) output.attrs = {key: args[0].key}\n\t\treturn output\n\t",
    "node_modules/mithril/mithril.js[25226:25292]": "\n\t\treturn parameterize(component, [].slice.call(arguments, 1))\n\t",
    "node_modules/mithril/mithril.js[25596:25680]": "\n\t\t\tisPrevented = true;\n\t\t\tcomputePreRedrawHook = computePostRedrawHook = null;\n\t\t",
    "node_modules/mithril/mithril.js[26404:26406]": "",
    "node_modules/mithril/mithril.js[28958:29130]": "\n\t\t\te = e || event;\n\t\t\tvar currentTarget = e.currentTarget || this;\n\t\t\twithAttrCallback(prop in currentTarget ? currentTarget[prop] : currentTarget.getAttribute(prop))\n\t\t",
    "node_modules/mithril/mithril.js[33130:33397]": "\n\t\t\t\t\tvar keys = route.match(/:[^\\/]+/g) || [];\n\t\t\t\t\tvar values = [].slice.call(arguments, 1, -2);\n\t\t\t\t\tfor (var i = 0, len = keys.length; i < len; i++) routeParams[keys[i].replace(/:|\\./g, \"\")] = decodeURIComponent(values[i])\n\t\t\t\t\tm.mount(root, router[route])\n\t\t\t\t",
    "node_modules/mithril/mithril.js[33458:33976]": "\n\t\te = e || event;\n\t\tif (e.ctrlKey || e.metaKey || e.which === 2) return;\n\t\tif (e.preventDefault) e.preventDefault();\n\t\telse e.returnValue = false;\n\t\tvar currentTarget = e.currentTarget || e.srcElement;\n\t\tvar args = m.route.mode === \"pathname\" && currentTarget.search ? parseQueryString(currentTarget.search.slice(1)) : {};\n\t\twhile (currentTarget && currentTarget.nodeName.toUpperCase() != \"A\") currentTarget = currentTarget.parentNode\n\t\tm.route(currentTarget[m.route.mode].slice(modes[m.route.mode].length), args)\n\t",
    "node_modules/mithril/mithril.js[34521:34753]": "\n\t\t\t\t\tif (!duplicates[key]) duplicates[key] = {}\n\t\t\t\t\tif (!duplicates[key][item]) {\n\t\t\t\t\t\tduplicates[key][item] = true\n\t\t\t\t\t\treturn memo.concat(encodeURIComponent(key) + \"=\" + encodeURIComponent(item))\n\t\t\t\t\t}\n\t\t\t\t\treturn memo\n\t\t\t\t",
    "node_modules/mithril/mithril.js[34938:35421]": "\n\t\tif (str.charAt(0) === \"?\") str = str.substring(1);\n\t\t\n\t\tvar pairs = str.split(\"&\"), params = {};\n\t\tfor (var i = 0, len = pairs.length; i < len; i++) {\n\t\t\tvar pair = pairs[i].split(\"=\");\n\t\t\tvar key = decodeURIComponent(pair[0])\n\t\t\tvar value = pair.length == 2 ? decodeURIComponent(pair[1]) : null\n\t\t\tif (params[key] != null) {\n\t\t\t\tif (type.call(params[key]) !== ARRAY) params[key] = [params[key]]\n\t\t\t\tparams[key].push(value)\n\t\t\t}\n\t\t\telse params[key] = value\n\t\t}\n\t\treturn params\n\t",
    "node_modules/mithril/mithril.js[35536:35661]": "\n\t\tvar cacheKey = getCellCacheKey(root);\n\t\tclear(root.childNodes, cellCache[cacheKey]);\n\t\tcellCache[cacheKey] = undefined\n\t",
    "node_modules/mithril/mithril.js[35689:35792]": "\n\t\tvar deferred = new Deferred();\n\t\tdeferred.promise = propify(deferred.promise);\n\t\treturn deferred\n\t",
    "node_modules/mithril/mithril.js[35835:36020]": "\n\t\tvar prop = m.prop(initialValue);\n\t\tpromise.then(prop);\n\t\tprop.then = function(resolve, reject) {\n\t\t\treturn propify(promise.then(resolve, reject), initialValue)\n\t\t};\n\t\treturn prop\n\t",
    "node_modules/mithril/mithril.js[36553:39259]": "\n\t\tvar RESOLVING = 1, REJECTING = 2, RESOLVED = 3, REJECTED = 4;\n\t\tvar self = this, state = 0, promiseValue = 0, next = [];\n\n\t\tself[\"promise\"] = {};\n\n\t\tself[\"resolve\"] = function(value) {\n\t\t\tif (!state) {\n\t\t\t\tpromiseValue = value;\n\t\t\t\tstate = RESOLVING;\n\n\t\t\t\tfire()\n\t\t\t}\n\t\t\treturn this\n\t\t};\n\n\t\tself[\"reject\"] = function(value) {\n\t\t\tif (!state) {\n\t\t\t\tpromiseValue = value;\n\t\t\t\tstate = REJECTING;\n\n\t\t\t\tfire()\n\t\t\t}\n\t\t\treturn this\n\t\t};\n\n\t\tself.promise[\"then\"] = function(successCallback, failureCallback) {\n\t\t\tvar deferred = new Deferred(successCallback, failureCallback);\n\t\t\tif (state === RESOLVED) {\n\t\t\t\tdeferred.resolve(promiseValue)\n\t\t\t}\n\t\t\telse if (state === REJECTED) {\n\t\t\t\tdeferred.reject(promiseValue)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnext.push(deferred)\n\t\t\t}\n\t\t\treturn deferred.promise\n\t\t};\n\n\t\tfunction finish(type) {\n\t\t\tstate = type || REJECTED;\n\t\t\tnext.map(function(deferred) {\n\t\t\t\tstate === RESOLVED && deferred.resolve(promiseValue) || deferred.reject(promiseValue)\n\t\t\t})\n\t\t}\n\n\t\tfunction thennable(then, successCallback, failureCallback, notThennableCallback) {\n\t\t\tif (((promiseValue != null && type.call(promiseValue) === OBJECT) || typeof promiseValue === FUNCTION) && typeof then === FUNCTION) {\n\t\t\t\ttry {\n\t\t\t\t\t// count protects against abuse calls from spec checker\n\t\t\t\t\tvar count = 0;\n\t\t\t\t\tthen.call(promiseValue, function(value) {\n\t\t\t\t\t\tif (count++) return;\n\t\t\t\t\t\tpromiseValue = value;\n\t\t\t\t\t\tsuccessCallback()\n\t\t\t\t\t}, function (value) {\n\t\t\t\t\t\tif (count++) return;\n\t\t\t\t\t\tpromiseValue = value;\n\t\t\t\t\t\tfailureCallback()\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tm.deferred.onerror(e);\n\t\t\t\t\tpromiseValue = e;\n\t\t\t\t\tfailureCallback()\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnotThennableCallback()\n\t\t\t}\n\t\t}\n\n\t\tfunction fire() {\n\t\t\t// check if it's a thenable\n\t\t\tvar then;\n\t\t\ttry {\n\t\t\t\tthen = promiseValue && promiseValue.then\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tm.deferred.onerror(e);\n\t\t\t\tpromiseValue = e;\n\t\t\t\tstate = REJECTING;\n\t\t\t\treturn fire()\n\t\t\t}\n\t\t\tthennable(then, function() {\n\t\t\t\tstate = RESOLVING;\n\t\t\t\tfire()\n\t\t\t}, function() {\n\t\t\t\tstate = REJECTING;\n\t\t\t\tfire()\n\t\t\t}, function() {\n\t\t\t\ttry {\n\t\t\t\t\tif (state === RESOLVING && typeof successCallback === FUNCTION) {\n\t\t\t\t\t\tpromiseValue = successCallback(promiseValue)\n\t\t\t\t\t}\n\t\t\t\t\telse if (state === REJECTING && typeof failureCallback === \"function\") {\n\t\t\t\t\t\tpromiseValue = failureCallback(promiseValue);\n\t\t\t\t\t\tstate = RESOLVING\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tm.deferred.onerror(e);\n\t\t\t\t\tpromiseValue = e;\n\t\t\t\t\treturn finish()\n\t\t\t\t}\n\n\t\t\t\tif (promiseValue === self) {\n\t\t\t\t\tpromiseValue = TypeError();\n\t\t\t\t\tfinish()\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthennable(then, function () {\n\t\t\t\t\t\tfinish(RESOLVED)\n\t\t\t\t\t}, finish, function () {\n\t\t\t\t\t\tfinish(state === RESOLVING && RESOLVED)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t",
    "node_modules/mithril/mithril.js[39294:39392]": "\n\t\tif (type.call(e) === \"[object Error]\" && !e.constructor.toString().match(/ Error/)) throw e\n\t",
    "node_modules/mithril/mithril.js[39420:40011]": "\n\t\tvar method = \"resolve\";\n\t\tfunction synchronizer(pos, resolved) {\n\t\t\treturn function(value) {\n\t\t\t\tresults[pos] = value;\n\t\t\t\tif (!resolved) method = \"reject\";\n\t\t\t\tif (--outstanding === 0) {\n\t\t\t\t\tdeferred.promise(results);\n\t\t\t\t\tdeferred[method](results)\n\t\t\t\t}\n\t\t\t\treturn value\n\t\t\t}\n\t\t}\n\n\t\tvar deferred = m.deferred();\n\t\tvar outstanding = args.length;\n\t\tvar results = new Array(outstanding);\n\t\tif (args.length > 0) {\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\targs[i].then(synchronizer(i, true), synchronizer(i, false))\n\t\t\t}\n\t\t}\n\t\telse deferred.resolve([]);\n\n\t\treturn deferred.promise\n\t",
    "node_modules/mithril/mithril.js[40039:40053]": "return value",
    "node_modules/mithril/mithril.js[40079:42274]": "\n\t\tif (options.dataType && options.dataType.toLowerCase() === \"jsonp\") {\n\t\t\tvar callbackKey = \"mithril_callback_\" + new Date().getTime() + \"_\" + (Math.round(Math.random() * 1e16)).toString(36);\n\t\t\tvar script = $document.createElement(\"script\");\n\n\t\t\twindow[callbackKey] = function(resp) {\n\t\t\t\tscript.parentNode.removeChild(script);\n\t\t\t\toptions.onload({\n\t\t\t\t\ttype: \"load\",\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tresponseText: resp\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\twindow[callbackKey] = undefined\n\t\t\t};\n\n\t\t\tscript.onerror = function(e) {\n\t\t\t\tscript.parentNode.removeChild(script);\n\n\t\t\t\toptions.onerror({\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tstatus: 500,\n\t\t\t\t\t\tresponseText: JSON.stringify({error: \"Error making jsonp request\"})\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\twindow[callbackKey] = undefined;\n\n\t\t\t\treturn false\n\t\t\t};\n\n\t\t\tscript.onload = function(e) {\n\t\t\t\treturn false\n\t\t\t};\n\n\t\t\tscript.src = options.url\n\t\t\t\t+ (options.url.indexOf(\"?\") > 0 ? \"&\" : \"?\")\n\t\t\t\t+ (options.callbackKey ? options.callbackKey : \"callback\")\n\t\t\t\t+ \"=\" + callbackKey\n\t\t\t\t+ \"&\" + buildQueryString(options.data || {});\n\t\t\t$document.body.appendChild(script)\n\t\t}\n\t\telse {\n\t\t\tvar xhr = new window.XMLHttpRequest;\n\t\t\txhr.open(options.method, options.url, true, options.user, options.password);\n\t\t\txhr.onreadystatechange = function() {\n\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\tif (xhr.status >= 200 && xhr.status < 300) options.onload({type: \"load\", target: xhr});\n\t\t\t\t\telse options.onerror({type: \"error\", target: xhr})\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (options.serialize === JSON.stringify && options.data && options.method !== \"GET\") {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t\t}\n\t\t\tif (options.deserialize === JSON.parse) {\n\t\t\t\txhr.setRequestHeader(\"Accept\", \"application/json, text/*\");\n\t\t\t}\n\t\t\tif (typeof options.config === FUNCTION) {\n\t\t\t\tvar maybeXhr = options.config(xhr, options);\n\t\t\t\tif (maybeXhr != null) xhr = maybeXhr\n\t\t\t}\n\n\t\t\tvar data = options.method === \"GET\" || !options.data ? \"\" : options.data\n\t\t\tif (data && (type.call(data) != STRING && data.constructor != window.FormData)) {\n\t\t\t\tthrow \"Request data should be either be a string or FormData. Check the `serialize` option in `m.request`\";\n\t\t\t}\n\t\t\txhr.send(data);\n\t\t\treturn xhr\n\t\t}\n\t",
    "node_modules/mithril/mithril.js[42323:42649]": "\n\t\tif (xhrOptions.method === \"GET\" && xhrOptions.dataType != \"jsonp\") {\n\t\t\tvar prefix = xhrOptions.url.indexOf(\"?\") < 0 ? \"?\" : \"&\";\n\t\t\tvar querystring = buildQueryString(data);\n\t\t\txhrOptions.url = xhrOptions.url + (querystring ? prefix + querystring : \"\")\n\t\t}\n\t\telse xhrOptions.data = serialize(data);\n\t\treturn xhrOptions\n\t",
    "node_modules/mithril/mithril.js[42687:42923]": "\n\t\tvar tokens = url.match(/:[a-z]\\w+/gi);\n\t\tif (tokens && data) {\n\t\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\t\tvar key = tokens[i].slice(1);\n\t\t\t\turl = url.replace(tokens[i], data[key]);\n\t\t\t\tdelete data[key]\n\t\t\t}\n\t\t}\n\t\treturn url\n\t",
    "node_modules/mithril/mithril.js[42959:44620]": "\n\t\tif (xhrOptions.background !== true) m.startComputation();\n\t\tvar deferred = new Deferred();\n\t\tvar isJSONP = xhrOptions.dataType && xhrOptions.dataType.toLowerCase() === \"jsonp\";\n\t\tvar serialize = xhrOptions.serialize = isJSONP ? identity : xhrOptions.serialize || JSON.stringify;\n\t\tvar deserialize = xhrOptions.deserialize = isJSONP ? identity : xhrOptions.deserialize || JSON.parse;\n\t\tvar extract = isJSONP ? function(jsonp) {return jsonp.responseText} : xhrOptions.extract || function(xhr) {\n\t\t\treturn xhr.responseText.length === 0 && deserialize === JSON.parse ? null : xhr.responseText\n\t\t};\n\t\txhrOptions.method = (xhrOptions.method || 'GET').toUpperCase();\n\t\txhrOptions.url = parameterizeUrl(xhrOptions.url, xhrOptions.data);\n\t\txhrOptions = bindData(xhrOptions, xhrOptions.data, serialize);\n\t\txhrOptions.onload = xhrOptions.onerror = function(e) {\n\t\t\ttry {\n\t\t\t\te = e || event;\n\t\t\t\tvar unwrap = (e.type === \"load\" ? xhrOptions.unwrapSuccess : xhrOptions.unwrapError) || identity;\n\t\t\t\tvar response = unwrap(deserialize(extract(e.target, xhrOptions)), e.target);\n\t\t\t\tif (e.type === \"load\") {\n\t\t\t\t\tif (type.call(response) === ARRAY && xhrOptions.type) {\n\t\t\t\t\t\tfor (var i = 0; i < response.length; i++) response[i] = new xhrOptions.type(response[i])\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhrOptions.type) response = new xhrOptions.type(response)\n\t\t\t\t}\n\t\t\t\tdeferred[e.type === \"load\" ? \"resolve\" : \"reject\"](response)\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tm.deferred.onerror(e);\n\t\t\t\tdeferred.reject(e)\n\t\t\t}\n\t\t\tif (xhrOptions.background !== true) m.endComputation()\n\t\t};\n\t\tajax(xhrOptions);\n\t\tdeferred.promise = propify(deferred.promise, xhrOptions.initialValue);\n\t\treturn deferred.promise\n\t",
    "node_modules/mithril/mithril.js[44663:44723]": "\n\t\tinitialize(window = mock || window);\n\t\treturn window;\n\t",
    "node_modules/mithril/mithril.js[45028:45038]": "return m",
    "js/models/todo.js[116:138]": "\n\t\treturn ++count;\n\t",
    "js/models/todo.js[188:347]": "\n\tthis.title = m.prop(data.title);\n\tthis.completed = m.prop(data.completed || false);\n\tthis.editing = m.prop(data.editing || false);\n\tthis.key = uniqueId();\n",
    "js/models/storage.js[217:282]": "\n\t\t\tlocalStorage.setItem(STORAGE_ID, JSON.stringify(todos));\n\t\t",
    "js/controllers/todo.js[200:233]": "\n\t\treturn new app.Todo(item);\n\t",
    "js/controllers/todo.js[391:547]": "\n\t\tvar title = this.title().trim();\n\t\tif (title) {\n\t\t\tthis.list.push(new app.Todo({title: title}));\n\t\t\tapp.storage.put(this.list);\n\t\t}\n\t\tthis.title('');\n\t",
    "js/controllers/todo.js[584:746]": "\n\t\tswitch (this.filter()) {\n\t\t\tcase 'active':\n\t\t\t\treturn !todo.completed();\n\t\t\tcase 'completed':\n\t\t\t\treturn todo.completed();\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t",
    "js/controllers/todo.js[782:908]": "\n\t\tif (todo.completed()) {\n\t\t\ttodo.completed(false);\n\t\t} else {\n\t\t\ttodo.completed(true);\n\t\t}\n\t\tapp.storage.put(this.list);\n\t",
    "js/controllers/todo.js[940:1003]": "\n\t\ttodo.previousTitle = todo.title();\n\t\ttodo.editing(true);\n\t",
    "js/controllers/todo.js[1049:1240]": "\n\t\tif (!todo.editing()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttodo.editing(false);\n\t\ttodo.title(todo.title().trim());\n\t\tif (!todo.title()) {\n\t\t\tthis.list.splice(index, 1);\n\t\t}\n\t\tapp.storage.put(this.list);\n\t",
    "js/controllers/todo.js[1281:1342]": "\n\t\ttodo.title(todo.previousTitle);\n\t\ttodo.editing(false);\n\t",
    "js/controllers/todo.js[1376:1398]": "\n\t\tthis.title('');\n\t",
    "js/controllers/todo.js[1431:1493]": "\n\t\tthis.list.splice(key, 1);\n\t\tapp.storage.put(this.list);\n\t",
    "js/controllers/todo.js[1531:1689]": "\n\t\tfor (var i = this.list.length - 1; i >= 0; i--) {\n\t\t\tif (this.list[i].completed()) {\n\t\t\t\tthis.list.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tapp.storage.put(this.list);\n\t",
    "js/controllers/todo.js[1728:1872]": "\n\t\tvar amount = 0;\n\t\tfor (var i = 0; i < this.list.length; i++) {\n\t\t\tif (this.list[i].completed()) {\n\t\t\t\tamount++;\n\t\t\t}\n\t\t}\n\t\treturn amount;\n\t",
    "js/controllers/todo.js[2072:2241]": "\n\t\tvar allCompleted = this.allCompleted();\n\t\tfor (var i = 0; i < this.list.length; i++) {\n\t\t\tthis.list[i].completed(!allCompleted);\n\t\t}\n\t\tapp.storage.put(this.list);\n\t",
    "js/views/main-view.js[135:340]": "\n\t\tm.redraw.strategy('none');\n\t\tif (e.keyCode === app.ENTER_KEY) {\n\t\t\tonenter();\n\t\t\tm.redraw.strategy('diff');\n\t\t} else if (e.keyCode === app.ESC_KEY) {\n\t\t\tonescape();\n\t\t\tm.redraw.strategy('diff');\n\t\t}\n\t",
    "js/views/main-view.js[1210:2352]": "\n\t\t\t\t\t\treturn m('li', { class: (function () {\n\t\t\t\t\t\t\tvar classes = '';\n\t\t\t\t\t\t\tclasses += task.completed() ? 'completed' : '';\n\t\t\t\t\t\t\tclasses += task.editing() ? ' editing' : '';\n\t\t\t\t\t\t\treturn classes;\n\t\t\t\t\t\t})(),\n\t\t\t\t\t\tkey: task.key\n\t\t\t\t\t\t}, [\n\t\t\t\t\t\t\tm('.view', [\n\t\t\t\t\t\t\t\tm('input.toggle[type=checkbox]', {\n\t\t\t\t\t\t\t\t\tonclick: m.withAttr('checked', ctrl.complete.bind(ctrl, task)),\n\t\t\t\t\t\t\t\t\tchecked: task.completed()\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tm('label', {\n\t\t\t\t\t\t\t\t\tondblclick: ctrl.edit.bind(ctrl, task)\n\t\t\t\t\t\t\t\t}, task.title()),\n\t\t\t\t\t\t\t\tm('button.destroy', {\n\t\t\t\t\t\t\t\t\tonclick: ctrl.remove.bind(ctrl, index)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]), m('input.edit', {\n\t\t\t\t\t\t\t\tvalue: task.title(),\n\t\t\t\t\t\t\t\tonkeyup: app.watchInput(\n\t\t\t\t\t\t\t\t\tctrl.doneEditing.bind(ctrl, task, index),\n\t\t\t\t\t\t\t\t\tctrl.cancelEditing.bind(ctrl, task)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\toninput: m.withAttr('value', function (value) {\n\t\t\t\t\t\t\t\t\tm.redraw.strategy('none');\n\t\t\t\t\t\t\t\t\ttask.title(value);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tconfig: function (element) {\n\t\t\t\t\t\t\t\t\tif (task.editing()) {\n\t\t\t\t\t\t\t\t\t\telement.focus();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonblur: ctrl.doneEditing.bind(ctrl, task, index)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]);\n\t\t\t\t\t",
    "js/views/footer-view.js[79:914]": "\n\tvar amountCompleted = ctrl.amountCompleted();\n\tvar amountActive = ctrl.list.length - amountCompleted;\n\n\treturn m('footer.footer', [\n\t\tm('span.todo-count', [\n\t\t\tm('strong', amountActive), ' item' + (amountActive !== 1 ? 's' : '') + ' left'\n\t\t]),\n\t\tm('ul.filters', [\n\t\t\tm('li', [\n\t\t\t\tm('a[href=/]', {\n\t\t\t\t\tconfig: m.route,\n\t\t\t\t\tclass: ctrl.filter() === '' ? 'selected' : ''\n\t\t\t\t}, 'All')\n\t\t\t]),\n\t\t\tm('li', [\n\t\t\t\tm('a[href=/active]', {\n\t\t\t\t\tconfig: m.route,\n\t\t\t\t\tclass: ctrl.filter() === 'active' ? 'selected' : ''\n\t\t\t\t}, 'Active')\n\t\t\t]),\n\t\t\tm('li', [\n\t\t\t\tm('a[href=/completed]', {\n\t\t\t\t\tconfig: m.route,\n\t\t\t\t\tclass: ctrl.filter() === 'completed' ? 'selected' : ''\n\t\t\t\t}, 'Completed')\n\t\t\t])\n\t\t]), ctrl.amountCompleted() === 0 ? '' : m('button.clear-completed', {\n\t\t\tonclick: ctrl.clearCompleted.bind(ctrl)\n\t\t}, 'Clear completed')\n\t]);\n"
}