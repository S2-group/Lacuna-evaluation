// LACUNA LAZY LOAD FALLBACK
function lacuna_lazy_load(id, callback){
    fetch("http://127.0.0.1:8125/lazyload/", {
        method: "POST",
        headers: { "Accept": "application/json", "Content-Type": "application/json" },
        body: JSON.stringify({id})
    }).then(response => {
        return response.text();
    }).then(callback);
}
/*! jQuery v2.1.1 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */ ! function(a, b) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[224:337]", functionData => eval(functionData))} : b(a)
}("undefined" != typeof window ? window : this, function(a, b) {
    var c = [],
        d = c.slice,
        e = c.concat,
        f = c.push,
        g = c.indexOf,
        h = {},
        i = h.toString,
        j = h.hasOwnProperty,
        k = {},
        l = a.document,
        m = "2.1.1",
        n = function(a, b) {
            return new n.fn.init(a, b)
        },
        o = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        p = /^-ms-/,
        q = /-([\da-z])/gi,
        r = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[848:894]", functionData => eval(functionData))};
    n.fn = n.prototype = {
        jquery: m,
        constructor: n,
        selector: "",
        length: 0,
        toArray: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[1035:1078]", functionData => eval(functionData))},
        get: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[1105:1202]", functionData => eval(functionData))},
        pushStack: function(a) {
            var b = n.merge(this.constructor(), a);
            return b.prevObject = this, b.context = this.context, b
        },
        each: function(a, b) {
            return n.each(this, a, b)
        },
        map: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[1473:1602]", functionData => eval(functionData))},
        slice: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[1630:1701]", functionData => eval(functionData))},
        first: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[1729:1770]", functionData => eval(functionData))},
        last: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[1797:1839]", functionData => eval(functionData))},
        eq: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[1865:2019]", functionData => eval(functionData))},
        end: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[2045:2117]", functionData => eval(functionData))},
        push: f,
        sort: c.sort,
        splice: c.splice
    }, n.extend = n.fn.extend = function() {
        var a, b, c, d, e, f, g = arguments[0] || {},
            h = 1,
            i = arguments.length,
            j = !1;
        for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || n.isFunction(g) || (g = {}), h === i && (g = this, h--); i > h; h++)
            if (null != (a = arguments[h]))
                for (b in a) c = g[b], d = a[b], g !== d && (j && d && (n.isPlainObject(d) || (e = n.isArray(d))) ? (e ? (e = !1, f = c && n.isArray(c) ? c : []) : f = c && n.isPlainObject(c) ? c : {}, g[b] = n.extend(j, f, d)) : void 0 !== d && (g[b] = d));
        return g
    }, n.extend({
        expando: "jQuery" + (m + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[2978:3020]", functionData => eval(functionData))},
        noop: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[3047:3049]", functionData => eval(functionData))},
        isFunction: function(a) {
            return "function" === n.type(a)
        },
        isArray: Array.isArray,
        isWindow: function(a) {
            return null != a && a === a.window
        },
        isNumeric: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[3293:3363]", functionData => eval(functionData))},
        isPlainObject: function(a) {
            return "object" !== n.type(a) || a.nodeType || n.isWindow(a) ? !1 : a.constructor && !j.call(a.constructor.prototype, "isPrototypeOf") ? !1 : !0
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a) return !1;
            return !0
        },
        type: function(a) {
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? h[i.call(a)] || "object" : typeof a
        },
        globalEval: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[3891:4097]", functionData => eval(functionData))},
        camelCase: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[4130:4194]", functionData => eval(functionData))},
        nodeName: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[4229:4318]", functionData => eval(functionData))},
        each: function(a, b, c) {
            var d, e = 0,
                f = a.length,
                g = s(a);
            if (c) {
                if (g) {
                    for (; f > e; e++)
                        if (d = b.apply(a[e], c), d === !1) break
                } else
                    for (e in a)
                        if (d = b.apply(a[e], c), d === !1) break
            } else if (g) {
                for (; f > e; e++)
                    if (d = b.call(a[e], e, a[e]), d === !1) break
            } else
                for (e in a)
                    if (d = b.call(a[e], e, a[e]), d === !1) break;
            return a
        },
        trim: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[5013:5084]", functionData => eval(functionData))},
        makeArray: function(a, b) {
            var c = b || [];
            return null != a && (s(Object(a)) ? n.merge(c, "string" == typeof a ? [a] : a) : f.call(c, a)), c
        },
        inArray: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[5307:5370]", functionData => eval(functionData))},
        merge: function(a, b) {
            for (var c = +b.length, d = 0, e = a.length; c > d; d++) a[e++] = b[d];
            return a.length = e, a
        },
        grep: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[5566:5713]", functionData => eval(functionData))},
        map: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[5746:6083]", functionData => eval(functionData))},
        guid: 1,
        proxy: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[6132:6435]", functionData => eval(functionData))},
        now: Date.now,
        support: k
    }), n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(a, b) {
        h["[object " + b + "]"] = b.toLowerCase()
    });

    function s(a) {
        var b = a.length,
            c = n.type(a);
        return "function" === c || n.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a
    }
    var t = function(a) {
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + -new Date,
            v = a.document,
            w = 0,
            x = 0,
            y = gb(),
            z = gb(),
            A = gb(),
            B = function(a, b) {
                return a === b && (l = !0), 0
            },
            C = "undefined",
            D = 1 << 31,
            E = {}.hasOwnProperty,
            F = [],
            G = F.pop,
            H = F.push,
            I = F.push,
            J = F.slice,
            K = F.indexOf || function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[7475:7626]", functionData => eval(functionData))},
            L = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            M = "[\\x20\\t\\r\\n\\f]",
            N = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
            O = N.replace("w", "w#"),
            P = "\\[" + M + "*(" + N + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + O + "))|)" + M + "*\\]",
            Q = ":(" + N + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + P + ")*)|.*)\\)|)",
            R = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g"),
            S = new RegExp("^" + M + "*," + M + "*"),
            T = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"),
            U = new RegExp("=" + M + "*([^\\]'\"]*?)" + M + "*\\]", "g"),
            V = new RegExp(Q),
            W = new RegExp("^" + O + "$"),
            X = {
                ID: new RegExp("^#(" + N + ")"),
                CLASS: new RegExp("^\\.(" + N + ")"),
                TAG: new RegExp("^(" + N.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + P),
                PSEUDO: new RegExp("^" + Q),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + L + ")$", "i"),
                needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)", "i")
            },
            Y = /^(?:input|select|textarea|button)$/i,
            Z = /^h\d$/i,
            $ = /^[^{]+\{\s*\[native \w/,
            _ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            ab = /[+~]/,
            bb = /'|\\/g,
            cb = new RegExp("\\\\([\\da-f]{1,6}" + M + "?|(" + M + ")|.)", "ig"),
            db = function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[9593:9788]", functionData => eval(functionData))};
        try {
            I.apply(F = J.call(v.childNodes), v.childNodes), F[v.childNodes.length].nodeType
        } catch (eb) {
            I = {
                apply: F.length ? function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[9987:10048]", functionData => eval(functionData))} : function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[10066:10236]", functionData => eval(functionData))}
            }
        }

        function fb(a, b, d, e) {
            var f, h, j, k, l, o, r, s, w, x;
            if ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, d = d || [], !a || "string" != typeof a) return d;
            if (1 !== (k = b.nodeType) && 9 !== k) return [];
            if (p && !e) {
                if (f = _.exec(a))
                    if (j = f[1]) {
                        if (9 === k) {
                            if (h = b.getElementById(j), !h || !h.parentNode) return d;
                            if (h.id === j) return d.push(h), d
                        } else if (b.ownerDocument && (h = b.ownerDocument.getElementById(j)) && t(b, h) && h.id === j) return d.push(h), d
                    } else {
                        if (f[2]) return I.apply(d, b.getElementsByTagName(a)), d;
                        if ((j = f[3]) && c.getElementsByClassName && b.getElementsByClassName) return I.apply(d, b.getElementsByClassName(j)), d
                    }
                if (c.qsa && (!q || !q.test(a))) {
                    if (s = r = u, w = b, x = 9 === k && a, 1 === k && "object" !== b.nodeName.toLowerCase()) {
                        o = g(a), (r = b.getAttribute("id")) ? s = r.replace(bb, "\\$&") : b.setAttribute("id", s), s = "[id='" + s + "'] ", l = o.length;
                        while (l--) o[l] = s + qb(o[l]);
                        w = ab.test(a) && ob(b.parentNode) || b, x = o.join(",")
                    }
                    if (x) try {
                        return I.apply(d, w.querySelectorAll(x)), d
                    } catch (y) {} finally {
                        r || b.removeAttribute("id")
                    }
                }
            }
            return i(a.replace(R, "$1"), b, d, e)
        }

        function gb() {
            var a = [];

            function b(c, e) {lacuna_lazy_load("js/jquery-2.1.1.min.js[12108:12217]", functionData => eval(functionData))}
            return b
        }

        function hb(a) {
            return a[u] = !0, a
        }

        function ib(a) {
            var b = n.createElement("div");
            try {
                return !!a(b)
            } catch (c) {
                return !1
            } finally {
                b.parentNode && b.parentNode.removeChild(b), b = null
            }
        }

        function jb(a, b) {
            var c = a.split("|"),
                e = a.length;
            while (e--) d.attrHandle[c[e]] = b
        }

        function kb(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[12782:13097]", functionData => eval(functionData))}

        function lb(a) {
            return function(b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[13155:13273]", functionData => eval(functionData))}
        }

        function mb(a) {
            return function(b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[13341:13479]", functionData => eval(functionData))}
        }

        function nb(a) {
            return hb(function(b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[13550:13795]", functionData => eval(functionData))})
        }

        function ob(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[13831:13907]", functionData => eval(functionData))}
        c = fb.support = {}, f = fb.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? "HTML" !== b.nodeName : !1
        }, m = fb.setDocument = function(a) {
            var b, e = a ? a.ownerDocument || a : v,
                g = e.defaultView;
            return e !== n && 9 === e.nodeType && e.documentElement ? (n = e, o = e.documentElement, p = !f(e), g && g !== g.top && (g.addEventListener ? g.addEventListener("unload", function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[14409:14444]", functionData => eval(functionData))}, !1) : g.attachEvent && g.attachEvent("onunload", function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[14506:14541]", functionData => eval(functionData))})), c.attributes = ib(function(a) {
                return a.className = "i", !a.getAttribute("className")
            }), c.getElementsByTagName = ib(function(a) {
                return a.appendChild(e.createComment("")), !a.getElementsByTagName("*").length
            }), c.getElementsByClassName = $.test(e.getElementsByClassName) && ib(function(a) {
                return a.innerHTML = "<div class='a'></div><div class='a i'></div>", a.firstChild.className = "i", 2 === a.getElementsByClassName("i").length
            }), c.getById = ib(function(a) {
                return o.appendChild(a).id = u, !e.getElementsByName || !e.getElementsByName(u).length
            }), c.getById ? (d.find.ID = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[15259:15455]", functionData => eval(functionData))}, d.filter.ID = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[15483:15650]", functionData => eval(functionData))}) : (delete d.find.ID, d.filter.ID = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[15699:15947]", functionData => eval(functionData))}), d.find.TAG = c.getElementsByTagName ? function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[16003:16114]", functionData => eval(functionData))} : function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[16132:16431]", functionData => eval(functionData))}, d.find.CLASS = c.getElementsByClassName && function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[16491:16611]", functionData => eval(functionData))}, r = [], q = [], (c.qsa = $.test(e.querySelectorAll)) && (ib(function(a) {
                a.innerHTML = "<select msallowclip=''><option selected=''></option></select>", a.querySelectorAll("[msallowclip^='']").length && q.push("[*^$]=" + M + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || q.push("\\[" + M + "*(?:value|" + L + ")"), a.querySelectorAll(":checked").length || q.push(":checked")
            }), ib(function(a) {
                var b = e.createElement("input");
                b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + M + "*[*^$|!~]?="), a.querySelectorAll(":enabled").length || q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), q.push(",.*:")
            })), (c.matchesSelector = $.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ib(function(a) {
                c.disconnectedMatch = s.call(a, "div"), s.call(a, "[s!='']:x"), r.push("!=", Q)
            }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), b = $.test(o.compareDocumentPosition), t = b || $.test(o.contains) ? function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[17844:18126]", functionData => eval(functionData))} : function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[18144:18301]", functionData => eval(functionData))}, B = b ? function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[18326:18811]", functionData => eval(functionData))} : function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[18829:19501]", functionData => eval(functionData))}, e) : n
        }, fb.matches = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[19549:19600]", functionData => eval(functionData))}, fb.matchesSelector = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[19638:20016]", functionData => eval(functionData))}, fb.contains = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[20047:20123]", functionData => eval(functionData))}, fb.attr = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[20150:20488]", functionData => eval(functionData))}, fb.error = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[20513:20599]", functionData => eval(functionData))}, fb.uniqueSort = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[20629:20960]", functionData => eval(functionData))}, e = fb.getText = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[20991:21466]", functionData => eval(functionData))}, d = fb.selectors = {
            cacheLength: 50,
            createPseudo: hb,
            match: X,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[22109:22295]", functionData => eval(functionData))},
                CHILD: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[22332:22607]", functionData => eval(functionData))},
                PSEUDO: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[22645:22950]", functionData => eval(functionData))}
            },
            filter: {
                TAG: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[23021:23323]", functionData => eval(functionData))},
                CLASS: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[23360:23701]", functionData => eval(functionData))},
                ATTR: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[23743:24228]", functionData => eval(functionData))},
                CHILD: function(a, b, c, d, e) {lacuna_lazy_load("js/jquery-2.1.1.min.js[24277:26398]", functionData => eval(functionData))},
                PSEUDO: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[26439:26992]", functionData => eval(functionData))}
            },
            pseudos: {
                not: hb(function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[27067:27562]", functionData => eval(functionData))}),
                has: hb(function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[27601:27734]", functionData => eval(functionData))}),
                contains: hb(function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[27778:27946]", functionData => eval(functionData))}),
                lang: hb(function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[27986:28512]", functionData => eval(functionData))}),
                target: function(b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[28551:28681]", functionData => eval(functionData))},
                root: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[28717:28771]", functionData => eval(functionData))},
                focus: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[28808:28948]", functionData => eval(functionData))},
                enabled: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[28987:29051]", functionData => eval(functionData))},
                disabled: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[29091:29155]", functionData => eval(functionData))},
                checked: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[29194:29357]", functionData => eval(functionData))},
                selected: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[29397:29505]", functionData => eval(functionData))},
                empty: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[29542:29711]", functionData => eval(functionData))},
                parent: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[29749:29815]", functionData => eval(functionData))},
                header: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[29853:29918]", functionData => eval(functionData))},
                input: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[29955:30020]", functionData => eval(functionData))},
                button: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[30058:30213]", functionData => eval(functionData))},
                text: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[30249:30452]", functionData => eval(functionData))},
                first: nb(function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[30491:30541]", functionData => eval(functionData))}),
                last: nb(function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[30584:30638]", functionData => eval(functionData))}),
                eq: nb(function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[30682:30748]", functionData => eval(functionData))}),
                even: nb(function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[30791:30901]", functionData => eval(functionData))}),
                odd: nb(function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[30943:31053]", functionData => eval(functionData))}),
                lt: nb(function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[31097:31219]", functionData => eval(functionData))}),
                gt: nb(function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[31263:31384]", functionData => eval(functionData))})
            }
        }, d.pseudos.nth = d.pseudos.eq;
        for (b in {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            }) d.pseudos[b] = lb(b);
        for (b in {
                submit: !0,
                reset: !0
            }) d.pseudos[b] = mb(b);

        function pb() {}
        pb.prototype = d.filters = d.pseudos, d.setFilters = new pb, g = fb.tokenize = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[31876:32683]", functionData => eval(functionData))};

        function qb(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[32709:32820]", functionData => eval(functionData))}

        function rb(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[32851:33660]", functionData => eval(functionData))}

        function sb(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[33685:33910]", functionData => eval(functionData))}

        function tb(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[33941:34043]", functionData => eval(functionData))}

        function ub(a, b, c, d, e) {lacuna_lazy_load("js/jquery-2.1.1.min.js[34080:34256]", functionData => eval(functionData))}

        function vb(a, b, c, d, e, f) {lacuna_lazy_load("js/jquery-2.1.1.min.js[34296:35480]", functionData => eval(functionData))}

        function wb(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[35505:36616]", functionData => eval(functionData))}

        function xb(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[36644:38226]", functionData => eval(functionData))}
        return h = fb.compile = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[38274:38595]", functionData => eval(functionData))}, i = fb.select = function(a, b, e, f) {lacuna_lazy_load("js/jquery-2.1.1.min.js[38634:39705]", functionData => eval(functionData))}, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, m(), c.sortDetached = ib(function(a) {
            return 1 & a.compareDocumentPosition(n.createElement("div"))
        }), ib(function(a) {
            return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href")
        }) || jb("type|href|height|width", function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[40081:40178]", functionData => eval(functionData))}), c.attributes && ib(function(a) {
            return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value")
        }) || jb("value", function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[40385:40483]", functionData => eval(functionData))}), ib(function(a) {
            return null == a.getAttribute("disabled")
        }) || jb(L, function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[40595:40749]", functionData => eval(functionData))}), fb
    }(a);
    n.find = t, n.expr = t.selectors, n.expr[":"] = n.expr.pseudos, n.unique = t.uniqueSort, n.text = t.getText, n.isXMLDoc = t.isXML, n.contains = t.contains;
    var u = n.expr.match.needsContext,
        v = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        w = /^.[^:#\[\.,]*$/;

    function x(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[41061:41509]", functionData => eval(functionData))}
    n.filter = function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[41543:41786]", functionData => eval(functionData))}, n.fn.extend({
        find: function(a) {
            var b, c = this.length,
                d = [],
                e = this;
            if ("string" != typeof a) return this.pushStack(n(a).filter(function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[41999:42112]", functionData => eval(functionData))}));
            for (b = 0; c > b; b++) n.find(a, e[b], d);
            return d = this.pushStack(c > 1 ? n.unique(d) : d), d.selector = this.selector ? this.selector + " " + a : a, d
        },
        filter: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[42335:42402]", functionData => eval(functionData))},
        not: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[42429:42496]", functionData => eval(functionData))},
        is: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[42522:42625]", functionData => eval(functionData))}
    });
    var y, z = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
        A = n.fn.init = function(a, b) {
            var c, d;
            if (!a) return this;
            if ("string" == typeof a) {
                if (c = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : z.exec(a), !c || !c[1] && b) return !b || b.jquery ? (b || y).find(a) : this.constructor(b).find(a);
                if (c[1]) {
                    if (b = b instanceof n ? b[0] : b, n.merge(this, n.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : l, !0)), v.test(c[1]) && n.isPlainObject(b))
                        for (c in b) n.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c]);
                    return this
                }
                return d = l.getElementById(c[2]), d && d.parentNode && (this.length = 1, this[0] = d), this.context = l, this.selector = a, this
            }
            return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : n.isFunction(a) ? "undefined" != typeof y.ready ? y.ready(a) : a(n) : (void 0 !== a.selector && (this.selector = a.selector, this.context = a.context), n.makeArray(a, this))
        };
    A.prototype = n.fn, y = n(l);
    var B = /^(?:parents|prev(?:Until|All))/,
        C = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    n.extend({
        dir: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[44051:44328]", functionData => eval(functionData))},
        sibling: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[44362:44487]", functionData => eval(functionData))}
    }), n.fn.extend({
        has: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[44535:44769]", functionData => eval(functionData))},
        closest: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[44803:45289]", functionData => eval(functionData))},
        index: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[45318:45502]", functionData => eval(functionData))},
        add: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[45532:45617]", functionData => eval(functionData))},
        addBack: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[45648:45744]", functionData => eval(functionData))}
    });

    function D(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[45775:45847]", functionData => eval(functionData))}
    n.each({
        parent: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[45889:45987]", functionData => eval(functionData))},
        parents: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46018:46071]", functionData => eval(functionData))},
        parentsUntil: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46113:46169]", functionData => eval(functionData))},
        next: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46197:46247]", functionData => eval(functionData))},
        prev: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46275:46329]", functionData => eval(functionData))},
        nextAll: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46360:46414]", functionData => eval(functionData))},
        prevAll: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46445:46503]", functionData => eval(functionData))},
        nextUntil: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46542:46599]", functionData => eval(functionData))},
        prevUntil: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46638:46699]", functionData => eval(functionData))},
        siblings: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46731:46807]", functionData => eval(functionData))},
        children: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46839:46893]", functionData => eval(functionData))},
        contents: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[46925:47002]", functionData => eval(functionData))}
    }, function(a, b) {
        n.fn[a] = function(c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[47060:47302]", functionData => eval(functionData))}
    });
    var E = /\S+/g,
        F = {};

    function G(a) {
        var b = F[a] = {};
        return n.each(a.match(E) || [], function(a, c) {
            b[c] = !0
        }), b
    }
    n.Callbacks = function(a) {
        a = "string" == typeof a ? F[a] || G(a) : n.extend({}, a);
        var b, c, d, e, f, g, h = [],
            i = !a.once && [],
            j = function(l) {
                for (b = a.memory && l, c = !0, g = e || 0, e = 0, f = h.length, d = !0; h && f > g; g++)
                    if (h[g].apply(l[0], l[1]) === !1 && a.stopOnFalse) {
                        b = !1;
                        break
                    }
                d = !1, h && (i ? i.length && j(i.shift()) : b ? h = [] : k.disable())
            },
            k = {
                add: function() {
                    if (h) {
                        var c = h.length;
                        ! function g(b) {
                            n.each(b, function(b, c) {
                                var d = n.type(c);
                                "function" === d ? a.unique && k.has(c) || h.push(c) : c && c.length && "string" !== d && g(c)
                            })
                        }(arguments), d ? f = h.length : b && (e = c, j(b))
                    }
                    return this
                },
                remove: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[48671:48931]", functionData => eval(functionData))},
                has: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[48966:49058]", functionData => eval(functionData))},
                empty: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[49094:49160]", functionData => eval(functionData))},
                disable: function() {
                    return h = i = b = void 0, this
                },
                disabled: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[49308:49357]", functionData => eval(functionData))},
                lock: function() {
                    return i = void 0, b || k.disable(), this
                },
                locked: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[49510:49559]", functionData => eval(functionData))},
                fireWith: function(a, b) {
                    return !h || c && !i || (b = b || [], b = [a, b.slice ? b.slice() : b], d ? i.push(b) : j(b)), this
                },
                fire: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[49776:49856]", functionData => eval(functionData))},
                fired: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[49892:49942]", functionData => eval(functionData))}
            };
        return k
    }, n.extend({
        Deferred: function(a) {
            var b = [
                    ["resolve", "done", n.Callbacks("once memory"), "resolved"],
                    ["reject", "fail", n.Callbacks("once memory"), "rejected"],
                    ["notify", "progress", n.Callbacks("memory")]
                ],
                c = "pending",
                d = {
                    state: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[50384:50440]", functionData => eval(functionData))},
                    always: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[50481:50575]", functionData => eval(functionData))},
                    then: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[50614:51302]", functionData => eval(functionData))},
                    promise: function(a) {
                        return null != a ? n.extend(a, d) : d
                    }
                },
                e = {};
            return d.pipe = d.then, n.each(b, function(a, f) {
                var g = f[2],
                    h = f[3];
                d[f[1]] = g.add, h && g.add(function() {
                    c = h
                }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[51756:51859]", functionData => eval(functionData))}, e[f[0] + "With"] = g.fireWith
            }), d.promise(e), a && a.call(e, e), e
        },
        when: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[51979:52773]", functionData => eval(functionData))}
    });
    var H;
    n.fn.ready = function(a) {
        return n.ready.promise().done(a), this
    }, n.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[52963:53018]", functionData => eval(functionData))},
        ready: function(a) {
            (a === !0 ? --n.readyWait : n.isReady) || (n.isReady = !0, a !== !0 && --n.readyWait > 0 || (H.resolveWith(l, [n]), n.fn.triggerHandler && (n(l).triggerHandler("ready"), n(l).off("ready"))))
        }
    });

    function I() {
        l.removeEventListener("DOMContentLoaded", I, !1), a.removeEventListener("load", I, !1), n.ready()
    }
    n.ready.promise = function(b) {
        return H || (H = n.Deferred(), "complete" === l.readyState ? setTimeout(n.ready) : (l.addEventListener("DOMContentLoaded", I, !1), a.addEventListener("load", I, !1))), H.promise(b)
    }, n.ready.promise();
    var J = n.access = function(a, b, c, d, e, f, g) {lacuna_lazy_load("js/jquery-2.1.1.min.js[53706:54242]", functionData => eval(functionData))};
    n.acceptData = function(a) {
        return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType
    };

    function K() {
        Object.defineProperty(this.cache = {}, 0, {
            get: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[54452:54493]", functionData => eval(functionData))}
        }), this.expando = n.expando + Math.random()
    }
    K.uid = 1, K.accepts = n.acceptData, K.prototype = {
        key: function(a) {
            if (!K.accepts(a)) return 0;
            var b = {},
                c = a[this.expando];
            if (!c) {
                c = K.uid++;
                try {
                    b[this.expando] = {
                        value: c
                    }, Object.defineProperties(a, b)
                } catch (d) {
                    b[this.expando] = c, n.extend(a, b)
                }
            }
            return this.cache[c] || (this.cache[c] = {}), c
        },
        set: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[55158:55437]", functionData => eval(functionData))},
        get: function(a, b) {
            var c = this.cache[this.key(a)];
            return void 0 === b ? c : c[b]
        },
        access: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[55602:55824]", functionData => eval(functionData))},
        remove: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[55857:56241]", functionData => eval(functionData))},
        hasData: function(a) {
            return !n.isEmptyObject(this.cache[a[this.expando]] || {})
        },
        discard: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[56385:56462]", functionData => eval(functionData))}
    };
    var L = new K,
        M = new K,
        N = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        O = /([A-Z])/g;

    function P(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[56602:57053]", functionData => eval(functionData))}
    n.extend({
        hasData: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[57098:57157]", functionData => eval(functionData))},
        data: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[57191:57239]", functionData => eval(functionData))},
        removeData: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[57276:57314]", functionData => eval(functionData))},
        _data: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[57349:57397]", functionData => eval(functionData))},
        _removeData: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[57435:57473]", functionData => eval(functionData))}
    }), n.fn.extend({
        data: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[57525:58696]", functionData => eval(functionData))},
        removeData: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[58730:58832]", functionData => eval(functionData))}
    }), n.extend({
        queue: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[58885:59077]", functionData => eval(functionData))},
        dequeue: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[59111:59534]", functionData => eval(functionData))},
        _queueHooks: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[59572:59823]", functionData => eval(functionData))}
    }), n.fn.extend({
        queue: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[59876:60225]", functionData => eval(functionData))},
        dequeue: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[60256:60359]", functionData => eval(functionData))},
        clearQueue: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[60393:60449]", functionData => eval(functionData))},
        promise: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[60483:60921]", functionData => eval(functionData))}
    });
    var Q = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        R = ["Top", "Right", "Bottom", "Left"],
        S = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[61063:61171]", functionData => eval(functionData))},
        T = /^(?:checkbox|radio)$/i;
    ! function() {
        var a = l.createDocumentFragment(),
            b = a.appendChild(l.createElement("div")),
            c = l.createElement("input");
        c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), b.appendChild(c), k.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = "<textarea>x</textarea>", k.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue
    }();
    var U = "undefined";
    k.focusinBubbles = "onfocusin" in a;
    var V = /^key/,
        W = /^(?:mouse|pointer|contextmenu)|click/,
        X = /^(?:focusinfocus|focusoutblur)$/,
        Y = /^([^.]*)(?:\.(.+)|)$/;

    function Z() {lacuna_lazy_load("js/jquery-2.1.1.min.js[61908:61933]", functionData => eval(functionData))}

    function $() {
        return !1
    }

    function _() {lacuna_lazy_load("js/jquery-2.1.1.min.js[61996:62075]", functionData => eval(functionData))}
    n.event = {
        global: {},
        add: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, o, p, q, r = L.get(a);
            if (r) {
                c.handler && (f = c, c = f.handler, e = f.selector), c.guid || (c.guid = n.guid++), (i = r.events) || (i = r.events = {}), (g = r.handle) || (g = r.handle = function(b) {
                    return typeof n !== U && n.event.triggered !== b.type ? n.event.dispatch.apply(a, arguments) : void 0
                }), b = (b || "").match(E) || [""], j = b.length;
                while (j--) h = Y.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), o && (l = n.event.special[o] || {}, o = (e ? l.delegateType : l.bindType) || o, l = n.event.special[o] || {}, k = n.extend({
                    type: o,
                    origType: q,
                    data: d,
                    handler: c,
                    guid: c.guid,
                    selector: e,
                    needsContext: e && n.expr.match.needsContext.test(e),
                    namespace: p.join(".")
                }, f), (m = i[o]) || (m = i[o] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, p, g) !== !1 || a.addEventListener && a.addEventListener(o, g, !1)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), n.event.global[o] = !0)
            }
        },
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, o, p, q, r = L.hasData(a) && L.get(a);
            if (r && (i = r.events)) {
                b = (b || "").match(E) || [""], j = b.length;
                while (j--)
                    if (h = Y.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), o) {
                        l = n.event.special[o] || {}, o = (d ? l.delegateType : l.bindType) || o, m = i[o] || [], h = h[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length;
                        while (f--) k = m[f], !e && q !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
                        g && !m.length && (l.teardown && l.teardown.call(a, p, r.handle) !== !1 || n.removeEvent(a, o, r.handle), delete i[o])
                    } else
                        for (o in i) n.event.remove(a, o + b[j], c, d, !0);
                n.isEmptyObject(i) && (delete r.handle, L.remove(a, "events"))
            }
        },
        trigger: function(b, c, d, e) {
            var f, g, h, i, k, m, o, p = [d || l],
                q = j.call(b, "type") ? b.type : b,
                r = j.call(b, "namespace") ? b.namespace.split(".") : [];
            if (g = h = d = d || l, 3 !== d.nodeType && 8 !== d.nodeType && !X.test(q + n.event.triggered) && (q.indexOf(".") >= 0 && (r = q.split("."), q = r.shift(), r.sort()), k = q.indexOf(":") < 0 && "on" + q, b = b[n.expando] ? b : new n.Event(q, "object" == typeof b && b), b.isTrigger = e ? 2 : 3, b.namespace = r.join("."), b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + r.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = d), c = null == c ? [b] : n.makeArray(c, [b]), o = n.event.special[q] || {}, e || !o.trigger || o.trigger.apply(d, c) !== !1)) {
                if (!e && !o.noBubble && !n.isWindow(d)) {
                    for (i = o.delegateType || q, X.test(i + q) || (g = g.parentNode); g; g = g.parentNode) p.push(g), h = g;
                    h === (d.ownerDocument || l) && p.push(h.defaultView || h.parentWindow || a)
                }
                f = 0;
                while ((g = p[f++]) && !b.isPropagationStopped()) b.type = f > 1 ? i : o.bindType || q, m = (L.get(g, "events") || {})[b.type] && L.get(g, "handle"), m && m.apply(g, c), m = k && g[k], m && m.apply && n.acceptData(g) && (b.result = m.apply(g, c), b.result === !1 && b.preventDefault());
                return b.type = q, e || b.isDefaultPrevented() || o._default && o._default.apply(p.pop(), c) !== !1 || !n.acceptData(d) || k && n.isFunction(d[q]) && !n.isWindow(d) && (h = d[k], h && (d[k] = null), n.event.triggered = q, d[q](), n.event.triggered = void 0, h && (d[k] = h)), b.result
            }
        },
        dispatch: function(a) {
            a = n.event.fix(a);
            var b, c, e, f, g, h = [],
                i = d.call(arguments),
                j = (L.get(this, "events") || {})[a.type] || [],
                k = n.event.special[a.type] || {};
            if (i[0] = a, a.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, a) !== !1) {
                h = n.event.handlers.call(this, a, j), b = 0;
                while ((f = h[b++]) && !a.isPropagationStopped()) {
                    a.currentTarget = f.elem, c = 0;
                    while ((g = f.handlers[c++]) && !a.isImmediatePropagationStopped())(!a.namespace_re || a.namespace_re.test(g.namespace)) && (a.handleObj = g, a.data = g.data, e = ((n.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), void 0 !== e && (a.result = e) === !1 && (a.preventDefault(), a.stopPropagation()))
                }
                return k.postDispatch && k.postDispatch.call(this, a), a.result
            }
        },
        handlers: function(a, b) {
            var c, d, e, f, g = [],
                h = b.delegateCount,
                i = a.target;
            if (h && i.nodeType && (!a.button || "click" !== a.type))
                for (; i !== this; i = i.parentNode || this)
                    if (i.disabled !== !0 || "click" !== a.type) {
                        for (d = [], c = 0; h > c; c++) f = b[c], e = f.selector + " ", void 0 === d[e] && (d[e] = f.needsContext ? n(e, this).index(i) >= 0 : n.find(e, this, null, [i]).length), d[e] && d.push(f);
                        d.length && g.push({
                            elem: i,
                            handlers: d
                        })
                    }
            return h < b.length && g.push({
                elem: this,
                handlers: b.slice(h)
            }), g
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[68595:68711]", functionData => eval(functionData))}
        },
        mouseHooks: {
            props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[68898:69399]", functionData => eval(functionData))}
        },
        fix: function(a) {
            if (a[n.expando]) return a;
            var b, c, d, e = a.type,
                f = a,
                g = this.fixHooks[e];
            g || (this.fixHooks[e] = g = W.test(e) ? this.mouseHooks : V.test(e) ? this.keyHooks : {}), d = g.props ? this.props.concat(g.props) : this.props, a = new n.Event(f), b = d.length;
            while (b--) c = d[b], a[c] = f[c];
            return a.target || (a.target = l), 3 === a.target.nodeType && (a.target = a.target.parentNode), g.filter ? g.filter(a, f) : a
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[70105:70208]", functionData => eval(functionData))},
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[70321:70422]", functionData => eval(functionData))},
                delegateType: "focusout"
            },
            click: {
                trigger: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[70537:70681]", functionData => eval(functionData))},
                _default: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[70721:70793]", functionData => eval(functionData))}
            },
            beforeunload: {
                postDispatch: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[70879:71001]", functionData => eval(functionData))}
            }
        },
        simulate: function(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[71066:71352]", functionData => eval(functionData))}
    }, n.removeEvent = function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[71394:71466]", functionData => eval(functionData))}, n.Event = function(a, b) {
        return this instanceof n.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? Z : $) : this.type = a, b && n.extend(this, b), this.timeStamp = a && a.timeStamp || n.now(), void(this[n.expando] = !0)) : new n.Event(a, b)
    }, n.Event.prototype = {
        isDefaultPrevented: $,
        isPropagationStopped: $,
        isImmediatePropagationStopped: $,
        preventDefault: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[72012:72148]", functionData => eval(functionData))},
        stopPropagation: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[72186:72326]", functionData => eval(functionData))},
        stopImmediatePropagation: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[72373:72564]", functionData => eval(functionData))}
    }, n.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        n.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[72859:73123]", functionData => eval(functionData))}
        }
    }), k.focusinBubbles || n.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[73274:73347]", functionData => eval(functionData))};
        n.event.special[b] = {
            setup: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[73410:73597]", functionData => eval(functionData))},
            teardown: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[73632:73833]", functionData => eval(functionData))}
        }
    }), n.fn.extend({
        on: function(a, b, c, d, e) {
            var f, g;
            if ("object" == typeof a) {
                "string" != typeof b && (c = c || b, b = void 0);
                for (g in a) this.on(g, b, c, a[g], e);
                return this
            }
            if (null == c && null == d ? (d = b, c = b = void 0) : null == d && ("string" == typeof b ? (d = c, c = void 0) : (d = c, c = b, b = void 0)), d === !1) d = $;
            else if (!d) return this;
            return 1 === e && (f = d, d = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[74394:74469]", functionData => eval(functionData))}, d.guid = f.guid || (f.guid = n.guid++)), this.each(function() {
                n.event.add(this, a, d, c, b)
            })
        },
        one: function(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[74641:74694]", functionData => eval(functionData))},
        off: function(a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) return d = a.handleObj, n(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;
            if ("object" == typeof a) {
                for (e in a) this.off(e, b, a[e]);
                return this
            }
            return (b === !1 || "function" == typeof b) && (c = b, b = void 0), c === !1 && (c = $), this.each(function() {
                n.event.remove(this, a, c, b)
            })
        },
        trigger: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[75303:75415]", functionData => eval(functionData))},
        triggerHandler: function(a, b) {
            var c = this[0];
            return c ? n.event.trigger(a, b, c, !0) : void 0
        }
    });
    var ab = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        bb = /<([\w:]+)/,
        cb = /<|&#?\w+;/,
        db = /<(?:script|style|link)/i,
        eb = /checked\s*(?:[^=]|=\s*.checked.)/i,
        fb = /^$|\/(?:java|ecma)script/i,
        gb = /^true\/(.*)/,
        hb = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
        ib = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""]
        };
    ib.optgroup = ib.option, ib.tbody = ib.tfoot = ib.colgroup = ib.caption = ib.thead, ib.th = ib.td;

    function jb(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[76419:76620]", functionData => eval(functionData))}

    function kb(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[76641:76724]", functionData => eval(functionData))}

    function lb(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[76745:76849]", functionData => eval(functionData))}

    function mb(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[76873:76989]", functionData => eval(functionData))}

    function nb(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[77013:77441]", functionData => eval(functionData))}

    function ob(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[77465:77679]", functionData => eval(functionData))}

    function pb(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[77703:77891]", functionData => eval(functionData))}
    n.extend({
        clone: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[77940:78506]", functionData => eval(functionData))},
        buildFragment: function(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[78552:79574]", functionData => eval(functionData))},
        cleanData: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[79607:80061]", functionData => eval(functionData))}
    }), n.fn.extend({
        text: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[80110:80422]", functionData => eval(functionData))},
        append: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[80451:80721]", functionData => eval(functionData))},
        prepend: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[80751:81036]", functionData => eval(functionData))},
        before: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[81065:81222]", functionData => eval(functionData))},
        after: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[81250:81419]", functionData => eval(functionData))},
        remove: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[81452:81729]", functionData => eval(functionData))},
        empty: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[81757:81917]", functionData => eval(functionData))},
        clone: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[81949:82106]", functionData => eval(functionData))},
        html: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[82134:82844]", functionData => eval(functionData))},
        replaceWith: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[82878:83139]", functionData => eval(functionData))},
        detach: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[83169:83218]", functionData => eval(functionData))},
        domManip: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[83253:84371]", functionData => eval(functionData))}
    }), n.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        n.fn[a] = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[84597:84798]", functionData => eval(functionData))}
    });
    var qb, rb = {};

    function sb(b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[84851:85067]", functionData => eval(functionData))}

    function tb(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[85088:85379]", functionData => eval(functionData))}
    var ub = /^margin/,
        vb = new RegExp("^(" + Q + ")(?!px)[a-z%]+$", "i"),
        wb = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[85489:85573]", functionData => eval(functionData))};

    function xb(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[85601:85990]", functionData => eval(functionData))}

    function yb(a, b) {
        return {
            get: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[86061:86166]", functionData => eval(functionData))}
        }
    }! function() {
        var b, c, d = l.documentElement,
            e = l.createElement("div"),
            f = l.createElement("div");
        if (f.style) {
            f.style.backgroundClip = "content-box", f.cloneNode(!0).style.backgroundClip = "", k.clearCloneStyle = "content-box" === f.style.backgroundClip, e.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute", e.appendChild(f);

            function g() {lacuna_lazy_load("js/jquery-2.1.1.min.js[86641:87023]", functionData => eval(functionData))}
            a.getComputedStyle && n.extend(k, {
                pixelPosition: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[87114:87167]", functionData => eval(functionData))},
                boxSizingReliable: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[87215:87281]", functionData => eval(functionData))},
                reliableMarginRight: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[87331:87772]", functionData => eval(functionData))}
            })
        }
    }(), n.swap = function(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[87837:88019]", functionData => eval(functionData))};
    var zb = /^(none|table(?!-c[ea]).+)/,
        Ab = new RegExp("^(" + Q + ")(.*)$", "i"),
        Bb = new RegExp("^([+-])=(" + Q + ")", "i"),
        Cb = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        Db = {
            letterSpacing: "0",
            fontWeight: "400"
        },
        Eb = ["Webkit", "O", "Moz", "ms"];

    function Fb(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[88444:88662]", functionData => eval(functionData))}

    function Gb(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[88689:88793]", functionData => eval(functionData))}

    function Hb(a, b, c, d, e) {lacuna_lazy_load("js/jquery-2.1.1.min.js[88826:89256]", functionData => eval(functionData))}

    function Ib(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[89283:89765]", functionData => eval(functionData))}

    function Jb(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[89789:90343]", functionData => eval(functionData))}
    n.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[90438:90608]", functionData => eval(functionData))}
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": "cssFloat"
        },
        style: function(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[91075:91795]", functionData => eval(functionData))},
        css: function(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[91831:92197]", functionData => eval(functionData))}
    }), n.each(["height", "width"], function(a, b) {
        n.cssHooks[b] = {
            get: function(a, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[92312:92516]", functionData => eval(functionData))},
            set: function(a, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[92553:92707]", functionData => eval(functionData))}
        }
    }), n.cssHooks.marginRight = yb(k.reliableMarginRight, function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[92792:92910]", functionData => eval(functionData))}), n.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        n.cssHooks[a + b] = {
            expand: function(c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[93073:93256]", functionData => eval(functionData))}
        }, ub.test(a) || (n.cssHooks[a + b].set = Gb)
    }), n.fn.extend({
        css: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[93361:93770]", functionData => eval(functionData))},
        show: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[93797:93840]", functionData => eval(functionData))},
        hide: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[93867:93906]", functionData => eval(functionData))},
        toggle: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[93936:94118]", functionData => eval(functionData))}
    });

    function Kb(a, b, c, d, e) {lacuna_lazy_load("js/jquery-2.1.1.min.js[94159:94218]", functionData => eval(functionData))}
    n.Tween = Kb, Kb.prototype = {
        constructor: Kb,
        init: function(a, b, c, d, e, f) {lacuna_lazy_load("js/jquery-2.1.1.min.js[94320:94515]", functionData => eval(functionData))},
        cur: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[94541:94675]", functionData => eval(functionData))},
        run: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[94702:95095]", functionData => eval(functionData))}
    }, Kb.prototype.init.prototype = Kb.prototype, Kb.propHooks = {
        _default: {
            get: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[95213:95423]", functionData => eval(functionData))},
            set: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[95454:95676]", functionData => eval(functionData))}
        }
    }, Kb.propHooks.scrollTop = Kb.propHooks.scrollLeft = {
        set: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[95772:95860]", functionData => eval(functionData))}
    }, n.easing = {
        linear: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[95909:95941]", functionData => eval(functionData))},
        swing: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[95970:96031]", functionData => eval(functionData))}
    }, n.fx = Kb.prototype.init, n.fx.step = {};
    var Lb, Mb, Nb = /^(?:toggle|show|hide)$/,
        Ob = new RegExp("^(?:([+-])=|)(" + Q + ")([a-z%]*)$", "i"),
        Pb = /queueHooks$/,
        Qb = [Vb],
        Rb = {
            "*": [function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[96291:96996]", functionData => eval(functionData))}]
        };

    function Sb() {lacuna_lazy_load("js/jquery-2.1.1.min.js[97028:97123]", functionData => eval(functionData))}

    function Tb(a, b) {
        var c, d = 0,
            e = {
                height: a
            };
        for (b = b ? 1 : 0; 4 > d; d += 2 - b) c = R[d], e["margin" + c] = e["padding" + c] = a;
        return b && (e.opacity = e.width = a), e
    }

    function Ub(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[97408:97552]", functionData => eval(functionData))}

    function Vb(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[97579:99506]", functionData => eval(functionData))}

    function Wb(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[99530:99900]", functionData => eval(functionData))}

    function Xb(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[99927:101805]", functionData => eval(functionData))}
    n.Animation = n.extend(Xb, {
            tweener: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[101875:102072]", functionData => eval(functionData))},
            prefilter: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[102112:102174]", functionData => eval(functionData))}
        }), n.speed = function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[102215:102844]", functionData => eval(functionData))}, n.fn.extend({
            fadeTo: function(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[102901:103054]", functionData => eval(functionData))},
            animate: function(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[103098:103485]", functionData => eval(functionData))},
            stop: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[103523:104362]", functionData => eval(functionData))},
            finish: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[104396:105053]", functionData => eval(functionData))}
        }), n.each(["toggle", "show", "hide"], function(a, b) {
            var c = n.fn[b];
            n.fn[b] = function(a, d, e) {lacuna_lazy_load("js/jquery-2.1.1.min.js[105187:105322]", functionData => eval(functionData))}
        }), n.each({
            slideDown: Tb("show"),
            slideUp: Tb("hide"),
            slideToggle: Tb("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function(a, b) {
            n.fn[a] = function(a, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[105732:105795]", functionData => eval(functionData))}
        }), n.timers = [], n.fx.tick = function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[105846:106061]", functionData => eval(functionData))}, n.fx.timer = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[106088:106165]", functionData => eval(functionData))}, n.fx.interval = 13, n.fx.start = function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[106211:106285]", functionData => eval(functionData))}, n.fx.stop = function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[106310:106362]", functionData => eval(functionData))}, n.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        }, n.fn.delay = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[106491:106752]", functionData => eval(functionData))},
        function() {
            var a = l.createElement("input"),
                b = l.createElement("select"),
                c = b.appendChild(l.createElement("option"));
            a.type = "checkbox", k.checkOn = "" !== a.value, k.optSelected = c.selected, b.disabled = !0, k.optDisabled = !c.disabled, a = l.createElement("input"), a.value = "t", a.type = "radio", k.radioValue = "t" === a.value
        }();
    var Yb, Zb, $b = n.expr.attrHandle;
    n.fn.extend({
        attr: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[107259:107333]", functionData => eval(functionData))},
        removeAttr: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[107367:107473]", functionData => eval(functionData))}
    }), n.extend({
        attr: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[107525:108039]", functionData => eval(functionData))},
        removeAttr: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[108076:108313]", functionData => eval(functionData))},
        attrHooks: {
            type: {
                set: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[108392:108638]", functionData => eval(functionData))}
            }
        }
    }), Zb = {
        set: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[108709:108795]", functionData => eval(functionData))}
    }, n.each(n.expr.match.bool.source.match(/\w+/g), function(a, b) {
        var c = $b[b] || n.find.attr;
        $b[b] = function(a, b, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[108939:109082]", functionData => eval(functionData))}
    });
    var _b = /^(?:input|select|textarea|button)$/i;
    n.fn.extend({
        prop: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[109190:109264]", functionData => eval(functionData))},
        removeProp: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[109298:109413]", functionData => eval(functionData))}
    }), n.extend({
        propFix: {
            "for": "htmlFor",
            "class": "className"
        },
        prop: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[109558:109890]", functionData => eval(functionData))},
        propHooks: {
            tabIndex: {
                get: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[109970:110094]", functionData => eval(functionData))}
            }
        }
    }), k.optSelected || (n.propHooks.selected = {
        get: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[110195:110313]", functionData => eval(functionData))}
    }), n.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        n.propFix[this.toLowerCase()] = this
    });
    var ac = /[\t\r\n\f]/g;
    n.fn.extend({
        addClass: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[110606:111341]", functionData => eval(functionData))},
        removeClass: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[111376:112201]", functionData => eval(functionData))},
        toggleClass: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[112239:112996]", functionData => eval(functionData))},
        hasClass: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[113028:113260]", functionData => eval(functionData))}
    });
    var bc = /\r/g;
    n.fn.extend({
        val: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[113332:114176]", functionData => eval(functionData))}
    }), n.extend({
        valHooks: {
            option: {
                get: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[114271:114404]", functionData => eval(functionData))}
            },
            select: {
                get: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[114475:115043]", functionData => eval(functionData))},
                set: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[115081:115382]", functionData => eval(functionData))}
            }
        }
    }), n.each(["radio", "checkbox"], function() {
        n.valHooks[this] = {
            set: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[115519:115623]", functionData => eval(functionData))}
        }, k.checkOn || (n.valHooks[this].get = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[115684:115764]", functionData => eval(functionData))})
    }), n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
        n.fn[b] = function(a, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[116045:116139]", functionData => eval(functionData))}
    }), n.fn.extend({
        hover: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[116192:116260]", functionData => eval(functionData))},
        bind: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[116294:116347]", functionData => eval(functionData))},
        unbind: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[116380:116431]", functionData => eval(functionData))},
        delegate: function(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[116472:116522]", functionData => eval(functionData))},
        undelegate: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[116562:116663]", functionData => eval(functionData))}
    });
    var cc = n.now(),
        dc = /\?/;
    n.parseJSON = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[116743:116784]", functionData => eval(functionData))}, n.parseXML = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[116811:117129]", functionData => eval(functionData))};
    var ec, fc, gc = /#.*$/,
        hc = /([?&])_=[^&]*/,
        ic = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        jc = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
        kc = /^(?:GET|HEAD)$/,
        lc = /^\/\//,
        mc = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
        nc = {},
        oc = {},
        pc = "*/".concat("*");
    try {
        fc = location.href
    } catch (qc) {
        fc = l.createElement("a"), fc.href = "", fc = fc.href
    }
    ec = mc.exec(fc.toLowerCase()) || [];

    function rc(a) {
        return function(b, c) {
            "string" != typeof b && (c = b, b = "*");
            var d, e = 0,
                f = b.toLowerCase().match(E) || [];
            if (n.isFunction(c))
                while (d = f[e++]) "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c)
        }
    }

    function sc(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[118065:118464]", functionData => eval(functionData))}

    function tc(a, b) {
        var c, d, e = n.ajaxSettings.flatOptions || {};
        for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
        return d && n.extend(!0, a, d), a
    }

    function uc(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[118700:119397]", functionData => eval(functionData))}

    function vc(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[119427:120646]", functionData => eval(functionData))}
    n.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: fc,
            type: "GET",
            isLocal: jc.test(ec[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": pc,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": n.parseJSON,
                "text xml": n.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
            return b ? tc(tc(a, n.ajaxSettings), b) : tc(n.ajaxSettings, a)
        },
        ajaxPrefilter: rc(nc),
        ajaxTransport: rc(oc),
        ajax: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[122017:127220]", functionData => eval(functionData))},
        getJSON: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[127257:127310]", functionData => eval(functionData))},
        getScript: function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[127346:127406]", functionData => eval(functionData))}
    }), n.each(["get", "post"], function(a, b) {
        n[b] = function(a, c, d, e) {lacuna_lazy_load("js/jquery-2.1.1.min.js[127492:127728]", functionData => eval(functionData))}
    }), n.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(a, b) {
        n.fn[b] = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[127874:127918]", functionData => eval(functionData))}
    }), n._evalUrl = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[127952:128143]", functionData => eval(functionData))}, n.fn.extend({
        wrapAll: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[128188:128633]", functionData => eval(functionData))},
        wrapInner: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[128666:128958]", functionData => eval(functionData))},
        wrap: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[128986:129149]", functionData => eval(functionData))},
        unwrap: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[129178:129342]", functionData => eval(functionData))}
    }), n.expr.filters.hidden = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[129387:129451]", functionData => eval(functionData))}, n.expr.filters.visible = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[129490:129538]", functionData => eval(functionData))};
    var wc = /%20/g,
        xc = /\[\]$/,
        yc = /\r?\n/g,
        zc = /^(?:submit|button|image|reset|file)$/i,
        Ac = /^(?:input|select|textarea|keygen)/i;

    function Bc(a, b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[129740:130055]", functionData => eval(functionData))}
    n.param = function(a, b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[130085:130595]", functionData => eval(functionData))}, n.fn.extend({
        serialize: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[130641:130702]", functionData => eval(functionData))},
        serializeArray: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[130739:131536]", functionData => eval(functionData))}
    }), n.ajaxSettings.xhr = function() {
        try {
            return new XMLHttpRequest
        } catch (a) {}
    };
    var Cc = 0,
        Dc = {},
        Ec = {
            0: 200,
            1223: 204
        },
        Fc = n.ajaxSettings.xhr();
    a.ActiveXObject && n(a).on("unload", function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[131849:131890]", functionData => eval(functionData))}), k.cors = !!Fc && "withCredentials" in Fc, k.ajax = Fc = !!Fc, n.ajaxTransport(function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[131983:133329]", functionData => eval(functionData))}), n.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[133622:133679]", functionData => eval(functionData))}
        }
    }), n.ajaxPrefilter("script", function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[133736:133823]", functionData => eval(functionData))}), n.ajaxTransport("script", function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[133864:134473]", functionData => eval(functionData))});
    var Gc = [],
        Hc = /(=)\?(?=&|$)|\?\?/;
    n.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[134606:134708]", functionData => eval(functionData))}
    }), n.ajaxPrefilter("json jsonp", function(b, c, d) {lacuna_lazy_load("js/jquery-2.1.1.min.js[134765:135616]", functionData => eval(functionData))}), n.parseHTML = function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[135651:135963]", functionData => eval(functionData))};
    var Ic = n.fn.load;
    n.fn.load = function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[136023:136661]", functionData => eval(functionData))}, n.expr.filters.animated = function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[136701:136804]", functionData => eval(functionData))};
    var Jc = a.document.documentElement;

    function Kc(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[136867:136943]", functionData => eval(functionData))}
    n.offset = {
        setOffset: function(a, b, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[136998:137598]", functionData => eval(functionData))}
    }, n.fn.extend({
        offset: function(a) {lacuna_lazy_load("js/jquery-2.1.1.min.js[137648:138275]", functionData => eval(functionData))},
        position: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[138306:138941]", functionData => eval(functionData))},
        offsetParent: function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[138976:139232]", functionData => eval(functionData))}
    }), n.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(b, c) {
        var d = "pageYOffset" === c;
        n.fn[b] = function(e) {lacuna_lazy_load("js/jquery-2.1.1.min.js[139409:139677]", functionData => eval(functionData))}
    }), n.each(["top", "left"], function(a, b) {
        n.cssHooks[b] = yb(k.pixelPosition, function(a, c) {lacuna_lazy_load("js/jquery-2.1.1.min.js[139786:139888]", functionData => eval(functionData))})
    }), n.each({
        Height: "height",
        Width: "width"
    }, function(a, b) {
        n.each({
            padding: "inner" + a,
            content: b,
            "": "outer" + a
        }, function(c, d) {
            n.fn[d] = function(d, e) {lacuna_lazy_load("js/jquery-2.1.1.min.js[140148:140725]", functionData => eval(functionData))}
        })
    }), n.fn.size = function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[140768:140802]", functionData => eval(functionData))}, n.fn.andSelf = n.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function() {lacuna_lazy_load("js/jquery-2.1.1.min.js[140910:140934]", functionData => eval(functionData))});
    var Lc = a.jQuery,
        Mc = a.$;
    return n.noConflict = function(b) {lacuna_lazy_load("js/jquery-2.1.1.min.js[141016:141105]", functionData => eval(functionData))}, typeof b === U && (a.jQuery = a.$ = n), n
});