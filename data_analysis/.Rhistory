source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
install.packages("extrafont")
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
names(data)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
names(data)
View(data)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
data$subject
unique(data$subject)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
row$subject
data$subject
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
data = read.csv("../data/aggregated_results.csv", stringsAsFactors = TRUE)
levels(data$subject)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
names(data)
data$subject_2
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
levels(data$subject_name)
names(data)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
names(data)
levels(data$subject_name)
levels(data$subject_type)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
levels(data$subject_name)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
levels(data$subject_name)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
levels(data$subject_name)
?factor
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
levels(data$subject_name)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
levels(data$subject_name)
source("~/Documents/Development/Lacuna-evaluation/data_analysis/analysis.r", echo=TRUE)
levels(data$subject_name)
names(data)
boxplot(Energy_J ~ lvl, data=data)
boxplot(Energy_mJ ~ lvl, data=data)
data %>% group_by(subject_type) %>%
summarise(min=min(Energy_mJ), max=max(Energy_mJ), median=median(Energy_mJ), mean=mean(Energy_mJ), sd=sd(Energy_mJ)) %>%
mutate(cv=100 * sd/mean) %>% as.data.frame()
data %>% group_by(subject_type) %>%
summarise(min=min(Energy_trapz), max=max(Energy_trapz), median=median(Energy_trapz), mean=mean(Energy_trapz), sd=sd(Energy_trapz)) %>%
mutate(cv=100 * sd/mean) %>% as.data.frame()
data %>% group_by(subject_type) %>%
summarise(min=min(energy_trapz), max=max(energy_trapz), median=median(energy_trapz), mean=mean(energy_trapz), sd=sd(energy_trapz)) %>%
mutate(cv=100 * sd/mean) %>% as.data.frame()
boxplot(energy_trapz ~ lvl, data=data)
names(data)
summary(data$CPU1.Load....)
summary(data$CPU.Load....)
summary(data$GPU.Load....)
setwd(".")
library(plyr)
library(dplyr)
library(ggplot2)
require(reshape2)
library(nortest)
library(effsize)
library(splitstackshape)
library(car)
library(rstatix)
library(tidyverse)
library(ggpubr)
library(ez)
library(bestNormalize)
options(max.print=50)
font_size = 10
############################
# Read the data
############################
data = read.csv("../data/aggregated_results.csv", stringsAsFactors = TRUE)
# Beautify the data
subject_type <- c()
subject_name <- c()
lab_prefix <- "http-192-168-1-57-2020-subjects-"
wild_prefix <- "http-192-168-1-57-2020-lacunawebpages-"
for(i in 1:nrow(data)) {
row <- data[i,]
if(startsWith(as.character(row$subject), lab_prefix)) {
subject_type <- c(subject_type, "lab")
subject_name <- c(subject_name, str_split(row$subject, "-")[[1]][9])
} else {
subject_type <- c(subject_type, "wild")
current_name <- str_sub(as.character(row$subject),1,nchar(as.character(row$subject))-2)
current_name <- str_replace(current_name, wild_prefix, "")
current_name <- substr(current_name, 1, nchar(current_name)/2)
subject_name <- c(subject_name, current_name)
}
}
subject_type <- as.factor(subject_type)
subject_name <- as.factor(subject_name)
data <- cbind(data, subject_name, subject_type)
############################
# Filter subjects
############################
# We remove Amazon.in since we already have Amazon.com
data <- data %>% filter(subject_name != "www-amazon-in")
data$subject_name <- factor(data$subject_name)
# We remove 5 in-the-lab subjects in order to have a balanced comparison with the in-the-wild subjects (15 vs 15)
data <- data %>% filter(subject_name != "canjs_require")
data <- data %>% filter(subject_name != "vanilla_es6")
data <- data %>% filter(subject_name != "backbone_require")
data <- data %>% filter(subject_name != "knockback")
data <- data %>% filter(subject_name != "exoskeleton")
data$subject_name <- factor(data$subject_name)
# Data to plot:
# energy_trapz
# Loading_time
# fcp
# fp
# n_packets
# n_bytes
# CPU.Load....
# GPU.Load....
# Memory.Usage..KB.
# We rename the variables to consider so that their names are more mnemonic
data = rename(data, energy = energy_trapz)
data = rename(data, load_time = Loading_time)
data = rename(data, fcp = fcp)
data = rename(data, fp = fp)
data = rename(data, packets = n_packets)
data = rename(data, bytes = n_bytes)
data = rename(data, cpu = CPU.Load....)
data = rename(data, gpu = GPU.Load....)
data = rename(data, mem = Memory.Usage..KB.)
names(data)
