diff --git a/index.js b/index.js
index 62ac2ef..587685b 100644
--- a/index.js
+++ b/index.js
@@ -1,12 +1,12 @@
 'use strict'
 const fs = require('fs');
-const hasbin = require('hasbin')
+// const hasbin = require('hasbin')
 const execSync = require('child_process').execSync;
 
-if (!hasbin.sync('dot')) {
-  console.log('Please install graphviz dot.')
-  process.exit(0)
-}
+// if (!hasbin.sync('dot')) {
+//   console.log('Please install graphviz dot.')
+//   process.exit(0)
+// }
 
 const input = process.argv[2]
 if (!input) {
@@ -18,6 +18,7 @@ const parser = require('./parser')
 const mapTupleToString = t => `"${t[0]}" -> "${t[1]}"`
 
 parser(input, tuples => {
+  echoExport(tuples);
     const stream = fs.openSync('callgraph.dot', 'w');
     const callsString = tuples.map(mapTupleToString).join(`\n`)
     const data = `
@@ -32,6 +33,15 @@ ${callsString}
     // .join(`\n`)
     // console.log('unshown calls', unshown)
 
-    execSync('dot -Tpng -o callgraph.png callgraph.dot')
-    console.log("Success! Check callgraph.png")
+    // execSync('dot -Tpng -o callgraph.png callgraph.dot')
+    // console.log("Success! Check callgraph.png")
 })
+
+
+function echoExport(arr) {
+  var edges = [];
+  arr.forEach(item => {
+    edges.push({ caller: item[0], callee: item[1] });
+  });
+  console.log(JSON.stringify(edges));
+}
\ No newline at end of file
diff --git a/parser.js b/parser.js
index e4fc733..00a2b46 100644
--- a/parser.js
+++ b/parser.js
@@ -25,7 +25,7 @@ function processFile(requiredFile, cb) {
   totalRunning++
   const currentFile = requiredFile.replace(/\.js$/, '')
   const file = path.join(rootDir, currentFile+'.js')
-  console.log('Processing', file)
+  // console.log('Processing', file)
   readFile(file)
     .then(es6 => {
       let code
